%Пишем функцию Alpha(L), которая будет возвращать углы, при которых ракета попадет в точку с координатами L.
%Для этого будем искать между какими углами находится точка с координатами L и интерполировать между ними.
function alpha = Alpha(L)
    %Задание параметров
    g = 9.81; %ускорение свободного падения
    k = 0.5; %коэффициент сопротивления воздуха
    m = 1; %масса ракеты
    delta = 5; %дельта-расстояние
    v0 = 102; %начальная скорость
    start_point = [0,0]; %начальная точка
    end_point = [L,0]; %конечная точка
    %Задаем максимальный и минимальный углы
    alpha_min = 0;
    alpha_max = pi/2;
    %Задаем массив углов
    alpha = [];
    %Инициализация кривой
    curve = [];
    %Стреляем N раз и интерполируем кривую зависимости угла от расстояния
    N = 100;
    angle = linspace(alpha_min, alpha_max, N);
    for i=1:N
        r = GetTrajectory(start_point, v0, angle(i), g, k, m);
        curve = [curve; [r(end,1), angle(i)]];
    end
    %График зависимости угла от расстояния
    plot(curve(:,1), curve(:,2));
    %Линейная интерполяция
    for i=1:size(curve,1)-1
        if curve(i,1) <= L && L <= curve(i+1,1) || curve(i,1) >= L && L >= curve(i+1,1)
            alpha = [alpha, curve(i,2) + (curve(i+1,2) - curve(i,2)) * (L - curve(i,1)) / (curve(i+1,1) - curve(i,1))];
        end
    end
end